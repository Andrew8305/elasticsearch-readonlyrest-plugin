cluster.name: elasticsearch

http.bind_host: _eth0:ipv4_
network.host: _eth0:ipv4_

#http.type: ssl_netty4
readonlyrest:
    enable: true
    ssl:
      enable: false
      keystore_file: "/elasticsearch/plugins/readonlyrest/keystore.jks"
      keystore_pass: readonlyrest
      key_pass: readonlyrest

    response_if_req_forbidden: Forbidden by ReadonlyREST ES plugin

    access_control_rules:

    - name: SHA1rule
      type: allow
      auth_key_sha1: a5aa590854b3806350b345ea154a52e3391aed32 #sha1configured:p455wd

    - name: "::LOGSTASH::"
      # auth_key is good for testing, but replace it with `auth_key_sha1`!
      auth_key: logstash:logstash
      type: allow
#      actions: ["indices:data/read/*","indices:data/write/*","indices:admin/template/*","indices:admin/create"]
#      indices: ["logstash-*", "<no-index>"]

    - name: "::KIBANA-SRV::"
      # auth_key is good for testing, but replace it with `auth_key_sha1`!
      auth_key: kibana:kibana
      session_max_idle: 10s
      type: allow

    - name: "::RO DEVELOPER::"
      auth_key: ro:dev
      type: allow
      kibana_access: ro
      indices: ["<no-index>", ".kibana", ".kibana-devnull", "logstash-*", "default"]

    - name: "::RW DEVELOPER::"
      auth_key: rw:dev
      type: allow
      kibana_access: rw
      indices: ["<no-index>", ".kibana", ".kibana-devnull", "logstash-*", "default"]

    - name: "::CAZZO BESTIA::"
      type: allow
      indices: [".kibana"]
      actions: ["indices:data/read/search", "indices:admin/mappings/fields/get", "indices:data/read/mget"]
#"indices:admin/refresh*","indices:admin/mapping/put","indices:admin/mappings/fields/get*","indices:data/write/update"]

#    - name: "::CAZZO BESTIA-2::"
#      type: allow
#      actions: [ "indices:data/read/*", "indices:data/write/*", "indices:data/read/field_stats", "indices:admin/mappings/fields/get", "indices:admin/get", "indices:data/read/msearch"]


 #   - name: "::PUBLIC SEARCH::"
 #     type: allow
 #     indices: ["public"]
 #     actions: ["indices:data/read/*"]

