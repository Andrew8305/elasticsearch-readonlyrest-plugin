http.publish_port: 9200
cluster:
  name: elasticsearch

index:
    number_of_replicas: 0
    number_of_shards: 1
    analysis:
        analyzer:
            eulang:
                type: custom
                tokenizer: standard
                filter: [standard, lowercase, asciifolding]
            location:
                type: custom
                tokenizer: standard
                filter: [standard, lowercase, asciifolding]


#network.host: _eth0:ipv4_
transport.tcp.port : 9310
http.bind_host: _eth0:ipv4_
http.publish_address: _eth0:ipv4_
discovery.zen.ping.multicast.enabled: false

readonlyrest:
    enable: true
    ssl:
      enable: true
      keystore_file: "/elasticsearch/plugins/readonlyrest/keystore.jks"
      keystore_pass: readonlyrest
      key_pass: readonlyrest

    response_if_req_forbidden: Forbidden by ReadonlyREST ES plugin

    access_control_rules:

    - name: "LOGSTASH"
      # auth_key is good for testing, but replace it with `auth_key_sha1`!
      auth_key: logstash:logstash
      type: allow
      actions: ["indices:data/read/*","indices:data/write/*","indices:admin/template/*","indices:admin/create"]
      indices: ["logstash-*"]

    - name: "KIBANA-SRV"
      # auth_key is good for testing, but replace it with `auth_key_sha1`!
      auth_key: kibana:kibana
      type: allow

    - name: "RW DEVELOPER"
      auth_key: rw:dev
      type: allow
      kibana_access: rw
      indices: [".kibana", ".kibana-devnull", "logstash-*"]

    - name: "RW (2) DEVELOPER"
      auth_key: ro+:dev
      type: allow
      kibana_access: rw
      indices: [".kibana", ".kibana-devnull", "logstash-*"]

    - name: "RO DEVELOPER"
      auth_key: ro:dev
      type: allow
      kibana_access: ro
      indices: [".kibana", ".kibana-devnull", "logstash-*"]

    - name: "PUBLIC SEARCH"
      type: allow
      indices: ["public"]
      actions: ["indices:data/read/*"]
